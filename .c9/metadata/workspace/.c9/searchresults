{"changed":true,"filter":false,"title":"Search Results","tooltip":"/.c9/searchresults","value":"Searching for \u0001hfAuth\u0001 in\u0001/\u0001 (Found 4 matches in 1 file)\n\n/public/app/app.js:\n\t5:     admin: {auth: function(hfAuth){\n\t6:         return hfAuth.authorizeCurrentUserForRoute('admin');\n\t8:     user: {auth: function(hfAuth){\n\t9:         return hfAuth.authorizeAuthenticatedUserForRoute();\n\nFound 4 matches in 1 file \n\n","undoManager":{"mark":-1,"position":16,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":[" "]},{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":[" "]},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001hf\u0001 in\u0001/public/app/account\u0001","",""]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["Found 0 matches in 0 files ",""]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":42},"end":{"row":0,"column":71},"action":"insert","lines":[" (Found 0 matches in 0 files)"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["Searching for \u0001hf\u0001 in\u0001/public/app/account\u0001 (Found 0 matches in 0 files)","","Found 0 matches in 0 files ","",""]},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001ta\u0001 in\u0001/public/app/account\u0001","",""]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/public/app/account/navbar-login.jade:",""]},{"start":{"row":3,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["\t1: .navbar-right(ng-controller=\"taNavBarLoginCtrl\")","\t13:       a.dropdown-toggle(href=\"\", data-toggle=\"dropdown\") ","",""]},{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["/public/app/account/profile.jade:",""]},{"start":{"row":7,"column":0},"end":{"row":14,"column":0},"action":"insert","lines":["\t1: .container","\t3:     form.form-horizontal(name=\"profileForm\")","","/public/app/account/signup.jade:","\t1: .container","\t3:     form.form-horizontal(name=\"signupForm\")","",""]},{"start":{"row":14,"column":0},"end":{"row":15,"column":0},"action":"insert","lines":["/public/app/account/taAuth.js:",""]},{"start":{"row":15,"column":0},"end":{"row":33,"column":0},"action":"insert","lines":["\t1: angular.module('app').factory('taAuth', function($http, taIdentity, $q, taUser) {","\t6:         if(response.data.success){","\t7:           var user = new taUser();","\t8:           angular.extend(user, response.data.user);","\t9:           taIdentity.currentUser = user;","\t18:     createUser: function(newUserData){","\t19:       var newUser = new taUser(newUserData);","\t22:         taIdentity.currentUser = newUser;","\t25:         dfd.reject(response.data.reason);","\t29:     updateCurrentUser: function(newUserData){","\t31:       var clone = angular.copy(taIdentity.currentUser);","\t32:       angular.extend(clone, newUserData);","\t34:         taIdentity.currentUser = clone;","\t37:         dfd.reject(response.data.reason);","\t44:         taIdentity.currentUser = undefined;","\t50:       if(taIdentity.isAuthorized(role)) {","\t57:       if(taIdentity.isAuthenticated()) {","",""]},{"start":{"row":33,"column":0},"end":{"row":37,"column":0},"action":"insert","lines":["/public/app/account/taIdentity.js:","\t1: angular.module('app').factory('taIdentity', function($window, taUser){","\t4:     currentUser = new taUser();","",""]},{"start":{"row":37,"column":0},"end":{"row":58,"column":0},"action":"insert","lines":["/public/app/account/taNavBarLoginCtrl.js:","\t1: angular.module('app').controller('taNavBarLoginCtrl',function($scope, $http, taIdentity, taNotifier, taAuth, $location){","\t2:     $scope.identity = taIdentity;","\t4:        taAuth.authenticateUser(username, password).then(function(success){","\t6:                taNotifier.notify('You have successfully signed in!');","\t8:                taNotifier.notify('Username/Password combination incorrect');","\t14:         taAuth.logoutUser().then(function() {","\t17:             taNotifier.notify(\"You have signed out.\");","","/public/app/account/taProfileCtrl.js:","\t1: angular.module('app').controller('taProfileCtrl', function($scope, taAuth, taIdentity, taNotifier){","\t2:   $scope.email = taIdentity.currentUser.username;","\t3:   $scope.fname = taIdentity.currentUser.firstName;","\t4:   $scope.lname = taIdentity.currentUser.lastName;","\t7:     var newUserData = {","\t13:       newUserData.password = $scope.password;","\t16:     taAuth.updateCurrentUser(newUserData).then(function(){","\t17:       taNotifier.notify('Your user account has been updated');","\t19:       taNotifier.error(reason);","","/public/app/account/taSignupCtrl.js:",""]},{"start":{"row":58,"column":0},"end":{"row":67,"column":0},"action":"insert","lines":["\t1: angular.module('app').controller('taSignupCtrl', function($scope, taUser, taNotifier, $location, taAuth){","\t3:     var newUserData = {","\t10:     taAuth.createUser(newUserData).then(function() {","\t11:       taNotifier.notify('User account created!');","\t14:       taNotifier.error(reason);","","/public/app/account/taUser.js:","\t1: angular.module('app').factory('taUser', function($resource){","",""]},{"start":{"row":67,"column":0},"end":{"row":68,"column":0},"action":"insert","lines":["Found 62 matches in 9 files ",""]},{"start":{"row":68,"column":0},"end":{"row":69,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":42},"end":{"row":0,"column":72},"action":"insert","lines":[" (Found 62 matches in 9 files)"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":69,"column":0},"action":"remove","lines":["Searching for \u0001ta\u0001 in\u0001/public/app/account\u0001 (Found 62 matches in 9 files)","","/public/app/account/navbar-login.jade:","\t1: .navbar-right(ng-controller=\"taNavBarLoginCtrl\")","\t13:       a.dropdown-toggle(href=\"\", data-toggle=\"dropdown\") ","","/public/app/account/profile.jade:","\t1: .container","\t3:     form.form-horizontal(name=\"profileForm\")","","/public/app/account/signup.jade:","\t1: .container","\t3:     form.form-horizontal(name=\"signupForm\")","","/public/app/account/taAuth.js:","\t1: angular.module('app').factory('taAuth', function($http, taIdentity, $q, taUser) {","\t6:         if(response.data.success){","\t7:           var user = new taUser();","\t8:           angular.extend(user, response.data.user);","\t9:           taIdentity.currentUser = user;","\t18:     createUser: function(newUserData){","\t19:       var newUser = new taUser(newUserData);","\t22:         taIdentity.currentUser = newUser;","\t25:         dfd.reject(response.data.reason);","\t29:     updateCurrentUser: function(newUserData){","\t31:       var clone = angular.copy(taIdentity.currentUser);","\t32:       angular.extend(clone, newUserData);","\t34:         taIdentity.currentUser = clone;","\t37:         dfd.reject(response.data.reason);","\t44:         taIdentity.currentUser = undefined;","\t50:       if(taIdentity.isAuthorized(role)) {","\t57:       if(taIdentity.isAuthenticated()) {","","/public/app/account/taIdentity.js:","\t1: angular.module('app').factory('taIdentity', function($window, taUser){","\t4:     currentUser = new taUser();","","/public/app/account/taNavBarLoginCtrl.js:","\t1: angular.module('app').controller('taNavBarLoginCtrl',function($scope, $http, taIdentity, taNotifier, taAuth, $location){","\t2:     $scope.identity = taIdentity;","\t4:        taAuth.authenticateUser(username, password).then(function(success){","\t6:                taNotifier.notify('You have successfully signed in!');","\t8:                taNotifier.notify('Username/Password combination incorrect');","\t14:         taAuth.logoutUser().then(function() {","\t17:             taNotifier.notify(\"You have signed out.\");","","/public/app/account/taProfileCtrl.js:","\t1: angular.module('app').controller('taProfileCtrl', function($scope, taAuth, taIdentity, taNotifier){","\t2:   $scope.email = taIdentity.currentUser.username;","\t3:   $scope.fname = taIdentity.currentUser.firstName;","\t4:   $scope.lname = taIdentity.currentUser.lastName;","\t7:     var newUserData = {","\t13:       newUserData.password = $scope.password;","\t16:     taAuth.updateCurrentUser(newUserData).then(function(){","\t17:       taNotifier.notify('Your user account has been updated');","\t19:       taNotifier.error(reason);","","/public/app/account/taSignupCtrl.js:","\t1: angular.module('app').controller('taSignupCtrl', function($scope, taUser, taNotifier, $location, taAuth){","\t3:     var newUserData = {","\t10:     taAuth.createUser(newUserData).then(function() {","\t11:       taNotifier.notify('User account created!');","\t14:       taNotifier.error(reason);","","/public/app/account/taUser.js:","\t1: angular.module('app').factory('taUser', function($resource){","","Found 62 matches in 9 files ","",""]},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001at\u0001 in\u0001/public/app/account\u0001","",""]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/public/app/account/navbar-login.jade:",""]},{"start":{"row":3,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["\t2:   form.navbar-form(ng-hide=\"identity.isAuthenticated()\")","\t11:   ul.nav.navbar-nav.navbar-right(ng-show=\"identity.isAuthenticated()\")","\t13:       a.dropdown-toggle(href=\"\", data-toggle=\"dropdown\") ","",""]}]}],[{"group":"doc","deltas":[{"start":{"row":7,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["/public/app/account/profile.jade:","\t25:                 button.btn.btn-primary(ng-click=\"update()\", ng-disabled=\"profileForm.$invalid\") Submit","",""]},{"start":{"row":10,"column":0},"end":{"row":13,"column":0},"action":"insert","lines":["/public/app/account/signup.jade:","\t5:         legend New User Information","",""]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":0},"end":{"row":27,"column":0},"action":"insert","lines":["/public/app/account/taAuth.js:","\t3:     authenticateUser: function(username, password){","\t6:         if(response.data.success){","\t8:           angular.extend(user, response.data.user);","\t18:     createUser: function(newUserData){","\t19:       var newUser = new taUser(newUserData);","\t25:         dfd.reject(response.data.reason);","\t29:     updateCurrentUser: function(newUserData){","\t32:       angular.extend(clone, newUserData);","\t33:       clone.$update().then(function(){","\t37:         dfd.reject(response.data.reason);","\t56:     authorizeAuthenticatedUserForRoute: function(){","\t57:       if(taIdentity.isAuthenticated()) {","",""]},{"start":{"row":27,"column":0},"end":{"row":30,"column":0},"action":"insert","lines":["/public/app/account/taIdentity.js:","\t9:     isAuthenticated: function(){","",""]},{"start":{"row":30,"column":0},"end":{"row":36,"column":0},"action":"insert","lines":["/public/app/account/taNavBarLoginCtrl.js:","\t1: angular.module('app').controller('taNavBarLoginCtrl',function($scope, $http, taIdentity, taNotifier, taAuth, $location){","\t4:        taAuth.authenticateUser(username, password).then(function(success){","\t8:                taNotifier.notify('Username/Password combination incorrect');","\t18:             $location.path('/');","",""]},{"start":{"row":36,"column":0},"end":{"row":43,"column":0},"action":"insert","lines":["/public/app/account/taProfileCtrl.js:","\t6:   $scope.update = function(){","\t7:     var newUserData = {","\t13:       newUserData.password = $scope.password;","\t16:     taAuth.updateCurrentUser(newUserData).then(function(){","\t17:       taNotifier.notify('Your user account has been updated');","",""]},{"start":{"row":43,"column":0},"end":{"row":51,"column":0},"action":"insert","lines":["/public/app/account/taSignupCtrl.js:","\t1: angular.module('app').controller('taSignupCtrl', function($scope, taUser, taNotifier, $location, taAuth){","\t3:     var newUserData = {","\t10:     taAuth.createUser(newUserData).then(function() {","\t11:       taNotifier.notify('User account created!');","\t12:       $location.path(\"/\");","","/public/app/account/taUser.js:",""]},{"start":{"row":51,"column":0},"end":{"row":54,"column":0},"action":"insert","lines":["\t3:     update: {method:'PUT', isArray:false}","","Found 39 matches in 9 files ",""]},{"start":{"row":54,"column":0},"end":{"row":55,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":42},"end":{"row":0,"column":72},"action":"insert","lines":[" (Found 39 matches in 9 files)"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":55,"column":0},"action":"remove","lines":["Searching for \u0001at\u0001 in\u0001/public/app/account\u0001 (Found 39 matches in 9 files)","","/public/app/account/navbar-login.jade:","\t2:   form.navbar-form(ng-hide=\"identity.isAuthenticated()\")","\t11:   ul.nav.navbar-nav.navbar-right(ng-show=\"identity.isAuthenticated()\")","\t13:       a.dropdown-toggle(href=\"\", data-toggle=\"dropdown\") ","","/public/app/account/profile.jade:","\t25:                 button.btn.btn-primary(ng-click=\"update()\", ng-disabled=\"profileForm.$invalid\") Submit","","/public/app/account/signup.jade:","\t5:         legend New User Information","","/public/app/account/taAuth.js:","\t3:     authenticateUser: function(username, password){","\t6:         if(response.data.success){","\t8:           angular.extend(user, response.data.user);","\t18:     createUser: function(newUserData){","\t19:       var newUser = new taUser(newUserData);","\t25:         dfd.reject(response.data.reason);","\t29:     updateCurrentUser: function(newUserData){","\t32:       angular.extend(clone, newUserData);","\t33:       clone.$update().then(function(){","\t37:         dfd.reject(response.data.reason);","\t56:     authorizeAuthenticatedUserForRoute: function(){","\t57:       if(taIdentity.isAuthenticated()) {","","/public/app/account/taIdentity.js:","\t9:     isAuthenticated: function(){","","/public/app/account/taNavBarLoginCtrl.js:","\t1: angular.module('app').controller('taNavBarLoginCtrl',function($scope, $http, taIdentity, taNotifier, taAuth, $location){","\t4:        taAuth.authenticateUser(username, password).then(function(success){","\t8:                taNotifier.notify('Username/Password combination incorrect');","\t18:             $location.path('/');","","/public/app/account/taProfileCtrl.js:","\t6:   $scope.update = function(){","\t7:     var newUserData = {","\t13:       newUserData.password = $scope.password;","\t16:     taAuth.updateCurrentUser(newUserData).then(function(){","\t17:       taNotifier.notify('Your user account has been updated');","","/public/app/account/taSignupCtrl.js:","\t1: angular.module('app').controller('taSignupCtrl', function($scope, taUser, taNotifier, $location, taAuth){","\t3:     var newUserData = {","\t10:     taAuth.createUser(newUserData).then(function() {","\t11:       taNotifier.notify('User account created!');","\t12:       $location.path(\"/\");","","/public/app/account/taUser.js:","\t3:     update: {method:'PUT', isArray:false}","","Found 39 matches in 9 files ","",""]},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001hfAuth\u0001 in\u0001/public/app/account\u0001","",""]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["Found 0 matches in 0 files ",""]},{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":46},"end":{"row":0,"column":75},"action":"insert","lines":[" (Found 0 matches in 0 files)"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":0,"column":9},"action":"remove","lines":["Searching"]},{"start":{"row":0,"column":1},"end":{"row":4,"column":0},"action":"remove","lines":["for \u0001hfAuth\u0001 in\u0001/public/app/account\u0001 (Found 0 matches in 0 files)","","Found 0 matches in 0 files ","",""]},{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":[" "]},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001hfAuth\u0001 in\u0001/public/app/account\u0001","",""]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["Found 0 matches in 0 files ",""]},{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":46},"end":{"row":0,"column":75},"action":"insert","lines":[" (Found 0 matches in 0 files)"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["Searching for \u0001hfAuth\u0001 in\u0001/public/app/account\u0001 (Found 0 matches in 0 files)","","Found 0 matches in 0 files ","",""]},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001hfAuth\u0001 in\u0001/\u0001","",""]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/public/app/app.js:",""]},{"start":{"row":3,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["\t5:     admin: {auth: function(hfAuth){","\t6:         return hfAuth.authorizeCurrentUserForRoute('admin');","\t8:     user: {auth: function(hfAuth){","\t9:         return hfAuth.authorizeAuthenticatedUserForRoute();","",""]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["Found 4 matches in 1 file ",""]}]}],[{"group":"doc","deltas":[{"start":{"row":9,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":28},"end":{"row":0,"column":56},"action":"insert","lines":[" (Found 4 matches in 1 file)"]}]}]]},"ace":{"folds":[],"customSyntax":"c9search","scrolltop":0,"scrollleft":0,"selection":{"start":{"row":10,"column":0},"end":{"row":10,"column":0},"isBackwards":false},"options":{"tabSize":4,"useSoftTabs":true,"guessTabSize":false,"useWrapMode":false,"wrapToView":true},"firstLineState":0}}